openapi: 3.0.0
info:
  title: REST API
  version: v1
servers:
- url: https://api.YOUR_REGION.rockset.com/v1
paths:
  /orgs/self/queries:
    post:
      description: Make a SQL query to Rockset. If you want to issue the query to
        a specific Virtual Instance use this https://docs.rockset.com/documentation/reference/queryvirtualinstance
      operationId: query
      requestBody:
        content:
          application/json:
            schema:
              properties:
                async:
                  description: 'If true, the query will run asynchronously for up
                    to 30 minutes. The query request will immediately return with
                    a query id that can be used to retrieve the query status and results.
                    If false or not specified, the query will return with results
                    once completed or timeout after 2 minutes. (To return results
                    directly for shorter queries while still allowing a timeout of
                    up to 30 minutes, set `async_options.client_timeout_ms`.) '
                  type: boolean
                async_options:
                  properties:
                    client_timeout_ms:
                      description: 'If the query completes before the client timeout,
                        the results are returned. Otherwise if the client timeout
                        is exceeded, the query id will be returned, and the query
                        will continue to run in the background for up to 30 minutes.
                        (The 30 minute timeout can be configured lower with timeout_ms.)
                        `async_options.client_timeout_ms` only applies when `async`
                        is true. The default value of `client_timeout_ms` is 0, so
                        async query requests will immediately return with a query
                        id by default. '
                      format: int64
                      type: integer
                    max_initial_results:
                      description: '[DEPRECATED] Use the query request `max_initial_results`
                        instead. The maximum number of results you will receive as
                        a client. If the query exceeds this limit, the remaining results
                        can be requested using a returned pagination cursor. In addition,
                        there is a maximum response size of 100MiB so fewer than `max_results`
                        may be returned.'
                      format: int64
                      type: integer
                    timeout_ms:
                      description: '[DEPRECATED] Use the query request `timeout_ms`
                        instead. The maximum amount of time that the system will attempt
                        to complete query execution before aborting the query and
                        returning an error. This must be set to a value that is greater
                        than or equal to the client timeout, and the maximum value
                        of this timeout is 30 minutes.'
                      format: int64
                      type: integer
                  type: object
                debug_threshold_ms:
                  description: If query execution takes longer than this value, debug
                    information will be logged. If the query text includes the DEBUG
                    hint and this parameter is also provided, only this value will
                    be used and the DEBUG hint will be ignored.
                  format: int64
                  type: integer
                max_initial_results:
                  description: This limits the maximum number of results in the initial
                    response. A pagination cursor is returned if the number of results
                    exceeds `max_initial_results`. If `max_initial_results` is not
                    set, all results will be returned in the initial response up to
                    4 million. If `max_initial_results` is set, the value must be
                    between 0 and 100,000. If the query is async and `client_timeout_ms`
                    is exceeded, `max_initial_results` does not apply since none of
                    the results will be returned with the initial response.
                  format: int64
                  type: integer
                sql:
                  properties:
                    default_row_limit:
                      description: Row limit to use. Limits specified in the query
                        text will override this default.
                      format: int32
                      type: integer
                    initial_paginate_response_doc_count:
                      description: '[DEPRECATED] Use `max_initial_results` instead.
                        Number of documents to return in addition to paginating for
                        this query call. Only relevant if `paginate` flag is also
                        set.'
                      format: int32
                      type: integer
                    parameters:
                      description: List of named parameters.
                      items:
                        properties:
                          name:
                            description: Name of the field.
                            example: _id
                            type: string
                          type:
                            description: Deprecated. Data type of the field.
                            example: string
                            type: string
                          value:
                            description: Literal value of the field.
                            example: 85beb391
                            type: string
                        required:
                        - name
                        - type
                        - value
                        type: object
                      type: array
                    query:
                      description: SQL query string.
                      example: SELECT * FROM foo where _id = :_id
                      type: string
                  required:
                  - query
                  type: object
                timeout_ms:
                  description: If a query exceeds the specified timeout, the query
                    will automatically stop and return an error. The query timeout
                    defaults to a maximum of 2 minutes. If `async` is true, the query
                    timeout defaults to a maximum of 30 minutes.
                  format: int64
                  type: integer
              required:
              - sql
              type: object
        description: JSON object
        required: true
      summary: Execute SQL Query
      tags:
      - Queries
  /orgs/self/ws:
    get:
      description: List all workspaces in an organization.
      operationId: listWorkspaces
      summary: List Workspaces
      tags:
      - Workspaces
      x-rename: list
    post:
      description: Create a new workspace.
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Longer explanation for the workspace.
                  example: Datasets of system logs for the ops team.
                  type: string
                name:
                  description: Descriptive label and unique identifier.
                  example: event_logs
                  type: string
              required:
              - name
              type: object
        description: workspace details
        required: true
      summary: Create Workspace
      tags:
      - Workspaces
      x-rename: create
  /orgs/self/ws/{workspace}:
    delete:
      description: Remove a workspace.
      operationId: deleteWorkspace
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      summary: Delete Workspace
      tags:
      - Workspaces
      x-rename: delete
    get:
      description: Get information about a single workspace.
      operationId: getWorkspace
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      summary: Retrieve Workspace
      tags:
      - Workspaces
      x-rename: get
  /orgs/self/ws/{workspace}/collections:
    get:
      description: Retrieve all collections in a workspace.
      operationId: workspaceCollections
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      summary: List Collections in Workspace
      tags:
      - Collections
    post:
      description: Create new collection in a workspace.
      operationId: createCollection
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                clustering_key:
                  description: Deprecated. List of clustering fields. Use CLUSTER
                    BY clause in `field_mapping_query` instead.
                  items:
                    properties:
                      field_name:
                        description: The name of a field, parsed as a SQL qualified
                          name.
                        example: address.city.zipcode
                        type: string
                      keys:
                        description: The values for partitioning of a field. Unneeded
                          if the partition type is AUTO.
                        example: '["value1", "value2"]'
                        items:
                          type: string
                        type: array
                      type:
                        description: The type of partitions on a field.
                        enum:
                        - AUTO
                        example: AUTO
                        type: string
                    type: object
                  type: array
                description:
                  description: Text describing the collection.
                  example: transactions from stores worldwide
                  type: string
                event_time_info:
                  properties:
                    field:
                      description: Name of the field containing event time.
                      example: timestamp
                      type: string
                    format:
                      description: 'Format of time field, can be one of: milliseconds_since_epoch,
                        seconds_since_epoch.'
                      example: seconds_since_epoch
                      type: string
                    time_zone:
                      description: Default time zone, in standard IANA format.
                      example: UTC
                      type: string
                  required:
                  - field
                  type: object
                field_mapping_query:
                  properties:
                    sql:
                      description: SELECT * EXCEPT (name), SHA256(name) AS name_anon
                        FROM _input.
                      example: sql
                      type: string
                  type: object
                name:
                  description: Unique identifier for collection, can contain alphanumeric
                    or dash characters.
                  example: global-transactions
                  type: string
                retention_secs:
                  description: Number of seconds after which data is purged, based
                    on event time. Minimum allowable value is 3600s/1 hour. The maximum
                    value is strictly less than 10 years.
                  example: 1000000
                  format: int64
                  maximum: 315359999
                  minimum: 3600
                  type: integer
                source_download_soft_limit_bytes:
                  description: Soft ingest limit for this collection.
                  format: int64
                  type: integer
                sources:
                  description: List of sources from which to ingest data.
                  items:
                    description: 'Details about the data source for the given collection.
                      Only one of the following fields are allowed to be defined.
                      Only collections can act as data sources for views. '
                    properties:
                      azure_blob_storage:
                        properties:
                          blob_bytes_total:
                            format: int64
                            readOnly: true
                            type: integer
                          blob_count_downloaded:
                            format: int64
                            readOnly: true
                            type: integer
                          blob_count_total:
                            format: int64
                            readOnly: true
                            type: integer
                          container:
                            description: Name of Azure blob Storage container you
                              want to ingest from.
                            example: server-logs
                            type: string
                          pattern:
                            description: Glob-style pattern that selects keys to ingest.
                              Only either prefix or pattern can be specified.
                            example: prefix/to/**/keys/*.format
                            type: string
                          prefix:
                            description: Prefix that selects blobs to ingest.
                            example: prefix/to/blobs
                            type: string
                          settings:
                            properties:
                              azblob_scan_frequency:
                                description: 'Rockset scans an Azure blob Storage
                                  container based on a defined time interval. The
                                  scan frequency determines the length of time between
                                  a new scan and the previous scan. If the previous
                                  scan finds new objects or updates to existing objects,
                                  Rockset immediately scans the bucket again after
                                  processing changes from the previous scan. Duration
                                  value is of type ISO 8601 (e.g. PT5H, PT4M, PT3S).
                                  It doesn''t account for DST, leap seconds and leap
                                  years. Minimum value: PT1S. Maximum value: PT1H.'
                                example: PT5M
                                type: string
                            type: object
                        type: object
                      azure_event_hubs:
                        properties:
                          hub_id:
                            description: Name of the hub which rockset should ingest
                              from.
                            example: event-hub-1
                            type: string
                          offset_reset_policy:
                            description: The offset reset policy.
                            enum:
                            - LATEST
                            - EARLIEST
                            example: EARLIEST
                            type: string
                          status:
                            properties:
                              last_consumed_time:
                                description: Time at which the last document was consumed.
                                example: '2001-08-28T00:23:41Z'
                                type: string
                              num_documents_processed:
                                description: Number of documents consumed.
                                example: 1337
                                format: int64
                                type: integer
                              partitions:
                                description: Status info per partition.
                                items:
                                  properties:
                                    offset_lag:
                                      description: Per partition lag for offset.
                                      example: 10
                                      format: int64
                                      type: integer
                                    partition_number:
                                      description: The number of this partition.
                                      example: 123
                                      format: int32
                                      type: integer
                                    partition_offset:
                                      description: Latest offset of partition.
                                      example: 100
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                              state:
                                description: State of the source.
                                enum:
                                - NO_DOCS_YET
                                - ACTIVE
                                - DORMANT
                                example: ACTIVE
                                type: string
                            type: object
                        type: object
                      azure_service_bus:
                        properties:
                          status:
                            properties:
                              first_processed_at:
                                description: Service Bus first message processed time
                                  in ISO-8601 format.
                                example: '2021-08-28T00:23:41Z'
                                type: string
                              records_processed:
                                description: Number of records processed.
                                example: 1000
                                format: int64
                                type: integer
                              sessions:
                                additionalProperties:
                                  properties:
                                    last_processed:
                                      description: Most recent ISO-8601 date when
                                        a message from this session was processed.
                                      example: '2022-08-23T00:13:41Z'
                                      type: string
                                    sequence_number:
                                      description: The last processed sequence number
                                        within this session.
                                      example: 323862
                                      format: int64
                                      type: integer
                                  type: object
                                description: Sessions processed.
                                type: object
                            type: object
                          subscription:
                            description: The subscription to read from the topic.
                            example: rockset-subscription
                            type: string
                          topic:
                            description: Name of the topic which rockset should ingest
                              from.
                            example: rockset-topic
                            type: string
                        type: object
                      dynamodb:
                        properties:
                          aws_region:
                            description: AWS region name of DynamoDB table, by default
                              us-west-2 is used.
                            example: us-east-2
                            type: string
                          current_status:
                            properties:
                              initial_dump_completion_percentage:
                                example: 0.73
                                format: double
                                type: number
                              state:
                                description: State of current ingest for this table.
                                enum:
                                - INITIALIZING
                                - SCANNING
                                - EXPORTING_TO_S3
                                - DOWNLOADING_FROM_S3
                                - PROCESSING_STREAM
                                example: PROCESSING_STREAM
                                type: string
                              stream_last_processed_at:
                                description: ISO-8601 date when source was last processed.
                                example: '2019-01-15T21:48:23Z'
                                type: string
                            type: object
                          rcu:
                            description: Max RCU usage for scan.
                            example: 1000
                            format: int64
                            type: integer
                          settings:
                            properties:
                              dynamodb_stream_poll_frequency:
                                description: 'Each DynamoDB stream can have one to
                                  many shards, and Rockset polls each DynamoDB shard
                                  at a fixed rate. Decreasing the duration between
                                  polls helps reduce ingest latency, while increasing
                                  the duration can prevent  Rockset from keeping up
                                  with the updates. If the latency exceeds 24 hours
                                  (DynamoDB stream retention duration), Rockset will
                                  not be able to process all of the streaming updates.
                                  Each request also has a fixed price associated with
                                  it. Duration value is of type ISO 8601 (e.g. PT5H,
                                  PT4M, PT3S). It doesn''t account for DST, leap seconds
                                  and leap years. Minimum value: PT0.25S. Maximum
                                  value: PT5M.'
                                example: PT1S
                                type: string
                            type: object
                          status:
                            properties:
                              scan_end_time:
                                description: DynamoDb scan end time.
                                example: '2001-08-28T00:23:41Z'
                                type: string
                              scan_records_processed:
                                description: Number of records inserted using scan.
                                example: 1000
                                format: int64
                                type: integer
                              scan_start_time:
                                description: DynamoDB scan start time.
                                example: '2001-08-28T00:23:41Z'
                                type: string
                              scan_total_records:
                                description: Number of records in DynamoDB table at
                                  time of scan.
                                example: 2000
                                format: int64
                                type: integer
                              state:
                                description: State of current ingest for this table.
                                enum:
                                - INITIALIZING
                                - SCANNING_TABLE
                                - PROCESSING_STREAM
                                example: SCANNING_TABLE
                                type: string
                              stream_last_processed_at:
                                description: ISO-8601 date when source was last processed.
                                example: '2019-01-15T21:48:23Z'
                                type: string
                            type: object
                          table_name:
                            description: Name of DynamoDB table containing data.
                            example: dynamodb_table_name
                            type: string
                          use_scan_api:
                            description: Whether to use DynamoDB Scan API for the
                              initial scan.
                            type: boolean
                        required:
                        - table_name
                        type: object
                      file_upload:
                        properties:
                          file_name:
                            description: Name of the file.
                            example: file1.json
                            type: string
                          file_size:
                            description: Size of the file in bytes.
                            example: 12345
                            format: int64
                            type: integer
                          file_upload_time:
                            description: Time of file upload.
                            example: '2019-01-15T21:48:23Z'
                            type: string
                        required:
                        - file_name
                        - file_size
                        - file_upload_time
                        type: object
                      format_params:
                        properties:
                          avro:
                            type: object
                          bson:
                            type: boolean
                          csv:
                            properties:
                              columnNames:
                                description: Names of columns.
                                example: '["c1", "c2", "c3"]'
                                items:
                                  type: string
                                type: array
                              columnTypes:
                                description: Names of columns.
                                example: '["BOOLEAN", "INTEGER", "FLOAT", "STRING"]'
                                items:
                                  enum:
                                  - UNKNOWN
                                  - BOOLEAN
                                  - BOOL
                                  - INTEGER
                                  - INT
                                  - FLOAT
                                  - TIME
                                  - DATE
                                  - DATETIME
                                  - TIMESTAMP
                                  - STRING
                                  type: string
                                type: array
                              encoding:
                                description: 'One of: UTF-8, ISO_8859_1, UTF-16.'
                                example: UTF-8
                                type: string
                              escapeChar:
                                description: escape character removes any special
                                  meaning from the following character,default is
                                  '\'
                                example: \
                                type: string
                              firstLineAsColumnNames:
                                description: If the first line in every object specifies
                                  the column names.
                                example: true
                                type: boolean
                              quoteChar:
                                description: character within which a cell value is
                                  enclosed,null character if no such character, default
                                  is '"'
                                example: '"'
                                type: string
                              separator:
                                description: A single character that is the column
                                  separator.
                                example: ','
                                type: string
                            type: object
                          json:
                            description: Source data is in json format.
                            example: true
                            type: boolean
                          mssql_dms:
                            type: boolean
                          mysql_dms:
                            type: boolean
                          oracle_dms:
                            type: boolean
                          postgres_dms:
                            type: boolean
                          xml:
                            properties:
                              attribute_prefix:
                                description: Tag to differentiate between attributes
                                  and elements.
                                example: _attr
                                type: string
                              doc_tag:
                                description: Tags with which documents are identified.
                                example: row
                                type: string
                              encoding:
                                description: Encoding in which data source is encoded.
                                example: UTF-8
                                type: string
                              root_tag:
                                description: Tag until which xml is ignored.
                                example: root
                                type: string
                              value_tag:
                                description: tag used for the value when there are
                                  attributes in the element having no child
                                example: value
                                type: string
                            type: object
                        type: object
                      gcs:
                        properties:
                          bucket:
                            description: Name of GCS bucket you want to ingest from.
                            example: server-logs
                            type: string
                          object_bytes_downloaded:
                            format: int64
                            readOnly: true
                            type: integer
                          object_bytes_total:
                            format: int64
                            readOnly: true
                            type: integer
                          object_count_downloaded:
                            format: int64
                            readOnly: true
                            type: integer
                          object_count_total:
                            format: int64
                            readOnly: true
                            type: integer
                          pattern:
                            description: Glob-style pattern that selects keys to ingest.
                              Only either prefix or pattern can be specified.
                            example: prefix/to/**/keys/*.format
                            type: string
                          prefix:
                            description: Prefix that selects keys to ingest.
                            example: prefix/to/keys
                            type: string
                          settings:
                            properties:
                              gcs_scan_frequency:
                                description: 'Rockset scans a GCS bucket based on
                                  a defined time interval. The scan frequency determines
                                  the length of time between a new scan and the previous
                                  scan. If the previous scan finds new objects or
                                  updates to existing objects, Rockset immediately
                                  scans the bucket again after processing changes
                                  from the previous scan. Duration value is of type
                                  ISO 8601 (e.g. PT5H, PT4M, PT3S). It doesn''t account
                                  for DST, leap seconds and leap years. Minimum value:
                                  PT1S. Maximum value: PT1H.'
                                example: PT5M
                                type: string
                            type: object
                        type: object
                      id:
                        description: Unique source identifier.
                        example: a1df483c-734e-485b-8005-f46386ef42f6
                        readOnly: true
                        type: string
                      ingest_transformation:
                        properties:
                          sql:
                            description: SELECT * EXCEPT (name), SHA256(name) AS name_anon
                              FROM _input.
                            example: sql
                            type: string
                        type: object
                      integration_name:
                        description: Name of integration to use.
                        example: aws-integration
                        type: string
                      kafka:
                        properties:
                          client_id:
                            description: The kafka client id being used.
                            example: cwc|0013a00001hSJ7oAAG|rockset-colln-consumer
                            type: string
                          consumer_group_id:
                            description: The Kafka consumer group Id being used.
                            example: org-collection
                            type: string
                          kafka_topic_name:
                            description: The Kafka topic to be tailed.
                            example: example-topic
                            type: string
                          offset_reset_policy:
                            description: The offset reset policy.
                            enum:
                            - LATEST
                            - EARLIEST
                            example: EARLIEST
                            type: string
                          status:
                            properties:
                              kafka_partitions:
                                description: Status info per partition.
                                items:
                                  properties:
                                    offset_lag:
                                      description: Per partition lag for offset.
                                      example: 10
                                      format: int64
                                      type: integer
                                    partition_number:
                                      description: The number of this partition.
                                      example: 123
                                      format: int32
                                      type: integer
                                    partition_offset:
                                      description: Latest offset of partition.
                                      example: 100
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                              last_consumed_time:
                                description: Time at which the last document was consumed
                                  from Kafka.
                                example: '2001-08-28T00:23:41Z'
                                type: string
                              num_documents_processed:
                                description: Number of documents consumed by this
                                  Kafka topic.
                                example: 1337
                                format: int64
                                type: integer
                              state:
                                description: State of the Kafka source.
                                enum:
                                - NO_DOCS_YET
                                - ACTIVE
                                - DORMANT
                                example: ACTIVE
                                type: string
                            type: object
                          use_v3:
                            description: Whether to use v3 integration.
                            type: boolean
                        type: object
                      kinesis:
                        properties:
                          aws_region:
                            description: AWS region name of Kinesis stream, by default
                              us-west-2 is used.
                            example: us-east-2
                            type: string
                          dms_primary_key:
                            description: Set of fields that correspond to a DMS primary
                              key.
                            items:
                              type: string
                            type: array
                          offset_reset_policy:
                            description: For non-DMS streams, Rockset can tail from
                              the earliest end or latest end of kinesis source.
                            enum:
                            - LATEST
                            - EARLIEST
                            example: EARLIEST
                            type: string
                          stream_name:
                            description: Name of kinesis stream.
                            example: click_stream
                            type: string
                        required:
                        - stream_name
                        type: object
                      mongodb:
                        properties:
                          collection_name:
                            description: MongoDB collection name.
                            example: my_collection
                            type: string
                          database_name:
                            description: MongoDB database name containing this collection.
                            example: my_database
                            type: string
                          retrieve_full_document:
                            description: Whether to get the full document from the
                              MongoDB change stream to enable multi-field expression
                              transformations. Selecting this option will increase
                              load on your upstream MongoDB database.
                            type: boolean
                          status:
                            properties:
                              scan_end_time:
                                description: MongoDB scan end time.
                                example: '2001-08-28T00:23:41Z'
                                type: string
                              scan_records_processed:
                                description: Number of records inserted using scan.
                                example: 1000
                                format: int64
                                type: integer
                              scan_start_time:
                                description: MongoDB scan start time.
                                example: '2001-08-28T00:23:41Z'
                                type: string
                              scan_total_records:
                                description: Number of records in MongoDB table at
                                  time of scan.
                                example: 2000
                                format: int64
                                type: integer
                              state:
                                description: State of current ingest for this table.
                                enum:
                                - INITIALIZING
                                - SCANNING_TABLE
                                - PROCESSING_STREAM
                                example: SCANNING_TABLE
                                type: string
                              stream_last_delete_processed_at:
                                description: ISO-8601 date when delete from source
                                  was last processed.
                                example: '2019-01-15T21:48:23Z'
                                type: string
                              stream_last_insert_processed_at:
                                description: ISO-8601 date when new insert from source
                                  was last processed.
                                example: '2019-01-15T21:48:23Z'
                                type: string
                              stream_last_update_processed_at:
                                description: ISO-8601 date when update from source
                                  was last processed.
                                example: '2019-01-15T21:48:23Z'
                                type: string
                              stream_records_deleted:
                                description: Number of new records deleted using stream.
                                example: 100
                                format: int64
                                type: integer
                              stream_records_inserted:
                                description: Number of new records inserted using
                                  stream.
                                example: 10000
                                format: int64
                                type: integer
                              stream_records_updated:
                                description: Number of new records updated using stream.
                                example: 1000
                                format: int64
                                type: integer
                            type: object
                        required:
                        - collection_name
                        - database_name
                        type: object
                      resume_at:
                        description: ISO-8601 date when source would be auto resumed,
                          if suspended
                        example: '2019-01-15T21:48:23Z'
                        readOnly: true
                        type: string
                      s3:
                        properties:
                          bucket:
                            description: Address of S3 bucket containing data.
                            example: s3://customer-account-info
                            type: string
                          object_bytes_downloaded:
                            format: int64
                            readOnly: true
                            type: integer
                          object_bytes_total:
                            format: int64
                            readOnly: true
                            type: integer
                          object_count_downloaded:
                            format: int64
                            readOnly: true
                            type: integer
                          object_count_total:
                            format: int64
                            readOnly: true
                            type: integer
                          pattern:
                            description: Glob-style pattern that selects keys to ingest.
                              Only either prefix or pattern can be specified.
                            example: prefix/to/**/keys/*.format
                            type: string
                          prefix:
                            description: Prefix that selects keys to ingest.
                            example: prefix/to/keys
                            type: string
                          prefixes:
                            description: Deprecated in favor of `prefix`. List of
                              prefixes to paths from which data should be ingested.
                            example: '["/transactions", "/stores"]'
                            items:
                              type: string
                            readOnly: true
                            type: array
                          region:
                            description: AWS region containing source bucket.
                            example: us-west-2
                            type: string
                          settings:
                            properties:
                              s3_scan_frequency:
                                description: 'Rockset scans an S3 bucket based on
                                  a defined time interval. The scan frequency determines
                                  the length of time between a new scan and the previous
                                  scan. If the previous scan finds new objects or
                                  updates to existing objects, Rockset immediately
                                  scans the bucket again after processing changes
                                  from the previous scan. Duration value is of type
                                  ISO 8601 (e.g. PT5H, PT4M, PT3S). It doesn''t account
                                  for DST, leap seconds and leap years. Minimum value:
                                  PT1S. Maximum value: PT1H.'
                                example: PT5M
                                type: string
                            type: object
                        required:
                        - bucket
                        type: object
                      snapshot:
                        properties:
                          source_collection_path:
                            description: A representation of the workspace and collection
                              where the source snapshot originated.
                            example: myWorkspace.myCollection
                            type: string
                          source_snapshot_rrn:
                            description: RRN of the snapshot that the new collection
                              will be created from.
                            example: rrn:snap:use1a1:123e4567-e89b-12d3-a456-556642440000
                            type: string
                        type: object
                      snowflake:
                        properties:
                          database:
                            description: Name of the snowflake database.
                            example: NASDAQ
                            type: string
                          schema:
                            description: Name of the snowflake database schema.
                            example: PUBLIC
                            type: string
                          status:
                            properties:
                              state:
                                description: State of current ingest for this table.
                                enum:
                                - INITIALIZING
                                - EXPORTING_TO_S3
                                - DOWNLOADING_FROM_S3
                                - COMPLETED
                                example: EXPORTING_TO_S3
                                type: string
                            type: object
                          table_name:
                            description: Name of the snowflake table.
                            example: COMPANIES
                            type: string
                          warehouse:
                            description: Name of the data warehouse to be used.
                            example: COMPUTE_XL
                            type: string
                        required:
                        - database
                        - schema
                        - table_name
                        type: object
                      status:
                        properties:
                          detected_size_bytes:
                            description: Size in bytes detected for the source at
                              collection initialization. This size can be 0 or null
                              for event stream sources.
                            format: int64
                            type: integer
                          last_processed_at:
                            description: ISO-8601 date when source was last processed.
                            example: '2019-01-15T21:48:23Z'
                            type: string
                          last_processed_item:
                            description: Last source item processed by ingester.
                            example: /path/to/some/object
                            type: string
                          message:
                            description: State message.
                            example: error 403 forbidden
                            type: string
                          state:
                            description: Status of the Source's ingestion.
                            enum:
                            - INITIALIZING
                            - WATCHING
                            - PROCESSING
                            - COMPLETED
                            - ERROR
                            - SUSPENDED
                            example: INITIALIZING
                            type: string
                          total_processed_items:
                            description: Total items processed of source.
                            example: 32849023
                            format: int64
                            type: integer
                        type: object
                      suspended_at:
                        description: ISO-8601 date when source was suspended, if suspended
                        example: '2019-01-15T21:48:23Z'
                        readOnly: true
                        type: string
                      system:
                        properties:
                          type:
                            description: The type of this system source.
                            enum:
                            - QUERY_LOGS
                            - INGEST_LOGS
                            example: QUERY_LOGS
                            type: string
                          workspace:
                            description: The workspace for which collections will
                              have logs created. If unspecified, logs will be created
                              for collections in all workspaces. Currently only supported
                              for the INGEST_LOGS system source.
                            example: commons
                            type: string
                        type: object
                      write_api:
                        type: object
                    type: object
                  type: array
                storage_compression_type:
                  description: RocksDB storage compression type.
                  enum:
                  - LZ4
                  - ZSTD
                  example: LZ4
                  type: string
              type: object
        description: JSON object
        required: true
      summary: Create Collection
      tags:
      - Collections
  /orgs/self/ws/{workspace}/collections/{collection}:
    delete:
      description: Delete a collection and all its documents from Rockset.
      operationId: deleteCollection
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: name of the collection
        in: path
        name: collection
        required: true
        schema:
          type: string
      summary: Delete Collection
      tags:
      - Collections
      x-rename: delete
    get:
      description: Get details about a collection.
      operationId: getCollection
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: name of the collection
        in: path
        name: collection
        required: true
        schema:
          type: string
      summary: Retrieve Collection
      tags:
      - Collections
      x-rename: get
  /orgs/self/ws/{workspace}/collections/{collection}/docs:
    delete:
      description: Delete documents from a collection.
      operationId: deleteDocuments
      parameters:
      - description: Name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: Name of the collection.
        in: path
        name: collection
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  description: Array of IDs of documents to be deleted.
                  items:
                    properties:
                      _id:
                        description: Unique document ID.
                        example: 2cd61e3b
                        type: string
                    required:
                    - _id
                    type: object
                  type: array
              required:
              - data
              type: object
        description: JSON object
        required: true
      summary: Delete Documents
      tags:
      - Documents
    patch:
      description: Update existing documents in a collection.
      operationId: patchDocuments
      parameters:
      - description: Name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: Name of the collection.
        in: path
        name: collection
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  description: List of patches to be applied.
                  items:
                    properties:
                      _id:
                        description: Unique ID of the document to be patched.
                        example: ca2d6832-1bfd-f88f-0620-d2aa27a5d86c
                        type: string
                      patch:
                        description: List of patch operations.
                        items:
                          properties:
                            from:
                              description: '[JSON Pointer](https://datatracker.ietf.org/doc/html/rfc6901)
                                referencing a location in the target document. Required
                                for `COPY` and `MOVE` operations.'
                              type: string
                            op:
                              description: '[JSON Patch operation](https://datatracker.ietf.org/doc/html/rfc6902#page-4)
                                to be performed in this patch. Case insensitive.'
                              enum:
                              - ADD
                              - REPLACE
                              - REMOVE
                              - COPY
                              - MOVE
                              - TEST
                              - INCREMENT
                              example: ADD
                              type: string
                            path:
                              description: '[JSON Pointer](https://datatracker.ietf.org/doc/html/rfc6901)
                                referencing a location in the target document where
                                the operation is performed'
                              example: /foo/bar
                              type: string
                            value:
                              description: Value used in the patch operation. Required
                                for `ADD`, `REPLACE`, `TEST`, and `INCREMENT` operations.
                              example: baz
                              type: object
                          required:
                          - op
                          - path
                          type: object
                        type: array
                    required:
                    - _id
                    - patch
                    type: object
                  type: array
              required:
              - data
              type: object
        description: JSON Patch objects
        required: true
      summary: Patch Documents
      tags:
      - Documents
    post:
      description: Add documents to a collection.
      operationId: addDocuments
      parameters:
      - description: Name of the workspace.
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: Name of the collection.
        in: path
        name: collection
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  description: Array of documents to be added to the collection.
                  example: '[{ "field": "value" }]'
                  items:
                    type: object
                  type: array
              required:
              - data
              type: object
        description: JSON object
        required: true
      summary: Add Documents
      tags:
      - Documents
  /orgs/self/ws/{workspace}/lambdas:
    get:
      description: List all Query Lambdas under given workspace.
      operationId: listQueryLambdasInWorkspace
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      summary: List Query Lambdas in Workspace
      tags:
      - Query Lambdas
    post:
      description: Create a Query Lambda in given workspace.
      operationId: createQueryLambda
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Optional description.
                  example: production version foo
                  type: string
                is_public:
                  type: boolean
                name:
                  description: Query Lambda name.
                  example: myQueryLambda
                  type: string
                sql:
                  properties:
                    default_parameters:
                      description: Default parameters for this Query Lambda.
                      items:
                        properties:
                          name:
                            description: Name of the field.
                            example: _id
                            type: string
                          type:
                            description: Deprecated. Data type of the field.
                            example: string
                            type: string
                          value:
                            description: Literal value of the field.
                            example: 85beb391
                            type: string
                        required:
                        - name
                        - type
                        - value
                        type: object
                      type: array
                    query:
                      description: SQL text.
                      example: SELECT 'Foo'
                      type: string
                  required:
                  - query
                  type: object
              required:
              - name
              - sql
              type: object
        description: JSON object
        required: true
      summary: Create Query Lambda
      tags:
      - Query Lambdas
  /orgs/self/ws/{workspace}/lambdas/{queryLambda}:
    delete:
      description: Delete a Query Lambda.
      operationId: deleteQueryLambda
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: name of the Query Lambda
        in: path
        name: queryLambda
        required: true
        schema:
          type: string
      summary: Delete Query Lambda
      tags:
      - Query Lambdas
  /orgs/self/ws/{workspace}/lambdas/{queryLambda}/tags:
    post:
      description: Create a tag for a specific Query Lambda version, or update that
        tag if it already exists.
      operationId: createQueryLambdaTag
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: name of the Query Lambda
        in: path
        name: queryLambda
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tag_name:
                  description: Name of Query Lambda tag.
                  example: production
                  type: string
                version:
                  description: Hash identifying a Query Lambda tag.
                  example: 123ABC
                  type: string
              required:
              - tag_name
              - version
              type: object
        description: JSON object
        required: true
      summary: Create Query Lambda Tag
      tags:
      - Query Lambdas
  /orgs/self/ws/{workspace}/lambdas/{queryLambda}/tags/{tag}:
    delete:
      description: Delete a tag for a specific Query Lambda
      operationId: deleteQueryLambdaTag
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: name of the Query Lambda
        in: path
        name: queryLambda
        required: true
        schema:
          type: string
      - description: name of the tag
        in: path
        name: tag
        required: true
        schema:
          type: string
      summary: Delete Query Lambda Tag Version
      tags:
      - Query Lambdas
    post:
      description: Execute the Query Lambda version associated with a given tag.
      operationId: executeQueryLambdaByTag
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: name of the Query Lambda
        in: path
        name: queryLambda
        required: true
        schema:
          type: string
      - description: tag
        in: path
        name: tag
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                async:
                  description: 'If true, the query will run asynchronously for up
                    to 30 minutes. The query request will immediately return with
                    a query id that can be used to retrieve the query status and results.
                    If false or not specified, the query will return with results
                    once completed or timeout after 2 minutes. (To return results
                    directly for shorter queries while still allowing a timeout of
                    up to 30 minutes, set `async_options.client_timeout_ms`.) '
                  type: boolean
                async_options:
                  properties:
                    client_timeout_ms:
                      description: 'If the query completes before the client timeout,
                        the results are returned. Otherwise if the client timeout
                        is exceeded, the query id will be returned, and the query
                        will continue to run in the background for up to 30 minutes.
                        (The 30 minute timeout can be configured lower with timeout_ms.)
                        `async_options.client_timeout_ms` only applies when `async`
                        is true. The default value of `client_timeout_ms` is 0, so
                        async query requests will immediately return with a query
                        id by default. '
                      format: int64
                      type: integer
                    max_initial_results:
                      description: '[DEPRECATED] Use the query request `max_initial_results`
                        instead. The maximum number of results you will receive as
                        a client. If the query exceeds this limit, the remaining results
                        can be requested using a returned pagination cursor. In addition,
                        there is a maximum response size of 100MiB so fewer than `max_results`
                        may be returned.'
                      format: int64
                      type: integer
                    timeout_ms:
                      description: '[DEPRECATED] Use the query request `timeout_ms`
                        instead. The maximum amount of time that the system will attempt
                        to complete query execution before aborting the query and
                        returning an error. This must be set to a value that is greater
                        than or equal to the client timeout, and the maximum value
                        of this timeout is 30 minutes.'
                      format: int64
                      type: integer
                  type: object
                debug_threshold_ms:
                  description: If query execution takes longer than this value, debug
                    information will be logged. If the query text includes the DEBUG
                    hint and this parameter is also provided, only this value will
                    be used and the DEBUG hint will be ignored.
                  format: int64
                  type: integer
                default_row_limit:
                  description: Row limit to use if no limit specified in the SQL query
                    text.
                  format: int32
                  type: integer
                initial_paginate_response_doc_count:
                  description: '[DEPRECATED] Use `max_initial_results` instead. Number
                    of documents to return in addition to paginating for this query
                    call. Only relevant if `paginate` flag is also set.'
                  format: int32
                  type: integer
                max_initial_results:
                  description: This limits the maximum number of results in the initial
                    response. A pagination cursor is returned if the number of results
                    exceeds `max_initial_results`. If `max_initial_results` is not
                    set, all results will be returned in the initial response up to
                    4 million. If `max_initial_results` is set, the value must be
                    between 0 and 100,000. If the query is async and `client_timeout_ms`
                    is exceeded, `max_initial_results` does not apply since none of
                    the results will be returned with the initial response.
                  format: int64
                  type: integer
                paginate:
                  description: Flag to paginate and store the results of this query
                    for later / sequential retrieval.
                  type: boolean
                parameters:
                  description: List of named parameters.
                  items:
                    properties:
                      name:
                        description: Name of the field.
                        example: _id
                        type: string
                      type:
                        description: Deprecated. Data type of the field.
                        example: string
                        type: string
                      value:
                        description: Literal value of the field.
                        example: 85beb391
                        type: string
                    required:
                    - name
                    - type
                    - value
                    type: object
                  type: array
                timeout_ms:
                  description: If a query exceeds the specified timeout, the query
                    will automatically stop and return an error. The query timeout
                    defaults to a maximum of 2 minutes. If `async` is true, the query
                    timeout defaults to a maximum of 30 minutes.
                  format: int64
                  type: integer
                virtual_instance_id:
                  description: Virtual instance on which to run the query.
                  type: string
              type: object
        description: JSON object
      summary: Execute Query Lambda By Tag
      tags:
      - Query Lambdas
  /orgs/self/ws/{workspace}/lambdas/{queryLambda}/versions:
    post:
      description: Create a new version of a Query Lambda in given workspace.
      operationId: updateQueryLambda
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: name of the Query Lambda
        in: path
        name: queryLambda
        required: true
        schema:
          type: string
      - description: Create a new Query Lambda if one does not exist already.
        in: query
        name: create
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Optional description.
                  example: production version foo
                  type: string
                is_public:
                  type: boolean
                sql:
                  properties:
                    default_parameters:
                      description: Default parameters for this Query Lambda.
                      items:
                        properties:
                          name:
                            description: Name of the field.
                            example: _id
                            type: string
                          type:
                            description: Deprecated. Data type of the field.
                            example: string
                            type: string
                          value:
                            description: Literal value of the field.
                            example: 85beb391
                            type: string
                        required:
                        - name
                        - type
                        - value
                        type: object
                      type: array
                    query:
                      description: SQL text.
                      example: SELECT 'Foo'
                      type: string
                  required:
                  - query
                  type: object
              type: object
        description: JSON object
        required: true
      summary: Update Query Lambda
      tags:
      - Query Lambdas
  /orgs/self/ws/{workspace}/scheduled_lambdas:
    post:
      description: Create a scheduled lambda mapping for your organization.
      operationId: createScheduledLambda
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apikey:
                  description: The apikey to use when triggering execution of the
                    associated query lambda.
                  example: qoiwkjndksd
                  type: string
                cron_string:
                  description: The UNIX-formatted cron string for this scheduled query
                    lambda.
                  example: '* * * * *'
                  type: string
                ql_name:
                  description: The name of the QL to use for scheduled execution.
                  example: ql_name
                  type: string
                tag:
                  description: The QL tag to use for scheduled execution. One of either
                    the QL tag or version must be specified
                  example: production
                  type: string
                total_times_to_execute:
                  description: The number of times to execute this scheduled query
                    lambda. Once this scheduled query lambda has been executed this
                    many times, it will no longer be executed.
                  example: 1
                  format: int64
                  type: integer
                version:
                  description: The version of the QL to use for scheduled execution.
                    One of either the QL version or tag must be specified.
                  example: abcdef1234
                  type: string
                webhook_auth_header:
                  description: The value to use as the authorization header when hitting
                    the webhook.
                  example: bearer qiowjkjkdskdskldio
                  type: string
                webhook_payload:
                  description: The payload that should be sent to the webhook. JSON
                    format.
                  type: string
                webhook_url:
                  description: The URL of the webhook that should be triggered after
                    this scheduled query lambda completes.
                  example: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
                  type: string
              required:
              - apikey
              - cron_string
              - ql_name
              type: object
        description: JSON Object
        required: true
      summary: Create a Scheduled Lambda mapping
      tags:
      - Scheduled Lambdas
      x-rename: create
  /orgs/self/ws/{workspace}/scheduled_lambdas/{scheduledLambdaId}:
    delete:
      description: Delete a scheduled lambda mapping for your organization.
      operationId: deleteScheduledLambda
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: Scheduled Lambda RRN
        in: path
        name: scheduledLambdaId
        required: true
        schema:
          type: string
      summary: Delete a Scheduled Lambda mapping
      tags:
      - Scheduled Lambdas
      x-rename: delete
    get:
      description: Retrieve a scheduled lambda mapping for your organization.
      operationId: getScheduledLambda
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: Scheduled Lambda RRN
        in: path
        name: scheduledLambdaId
        required: true
        schema:
          type: string
      summary: Retrieve a Scheduled Lambda mapping
      tags:
      - Scheduled Lambdas
      x-rename: get
    post:
      description: Update a scheduled lambda mapping for your organization.
      operationId: updateScheduledLambda
      parameters:
      - description: name of the workspace
        in: path
        name: workspace
        required: true
        schema:
          default: commons
          type: string
      - description: Scheduled Lambda RRN
        in: path
        name: scheduledLambdaId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apikey:
                  description: The apikey to use when triggering execution of the
                    associated query lambda.
                  example: qoiwkjndksd
                  type: string
                resume_permanent_error:
                  description: Boolean flag to allow a scheduled query lambda to resume
                    execution after being suspended due to execution failure. This
                    flag will be unset after scheduled lambda execution.
                  type: boolean
                total_times_to_execute:
                  description: The number of times to execute this scheduled query
                    lambda.
                  example: 1
                  format: int64
                  type: integer
                webhook_auth_header:
                  description: The value to use as the authorization header when hitting
                    the webhook.
                  example: bearer qiowjkjkdskdskldio
                  type: string
                webhook_payload:
                  description: The payload that should be sent to the webhook. JSON
                    format.
                  type: string
                webhook_url:
                  description: The URL of the webhook that should be triggered after
                    this scheduled query lambda completes.
                  example: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
                  type: string
              type: object
        description: JSON Object
        required: true
      summary: Update a Scheduled Lambda mapping
      tags:
      - Scheduled Lambdas
      x-rename: update